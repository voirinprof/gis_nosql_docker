version: '3.8'

services:
  # container for the creator (csv files)
  # this container is used to create the csv files from the shapefiles
  creator:
    build:
      context: ./creator
      dockerfile: Dockerfile
    container_name: creator
    volumes:
      - ./data:/data
    restart: "no"
  # container for the redis database
  # this container is used to store the data in memory
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
  # container for the neo4j database
  # this container is used to store the data in a graph database
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - ./data:/var/lib/neo4j/import
      - ./neo4j/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2g
      - NEO4J_dbms_memory_pagecache_size=512m
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      
    healthcheck:
      # important to add this for neo4j, starting the server is a little long
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    depends_on:
      - creator
  # container for the flask api
  # this container is used to serve the api
  flask:
    build:
      context: ./flask
      dockerfile: Dockerfile
    container_name: flask_api
    volumes:
      - ./flask:/app
      - ./data:/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4jpassword
      - DATA_ADDRESS=/data/Adresses.geojson
      - DATA_STREETS=/data/Segments_de_rue.shp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 5
  # container for the web server
  # this container is used to serve the web application
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web:/usr/share/nginx/html:ro
    depends_on:
      - flask
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis_data:
  neo4j_data: